import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:provider/provider.dart';
import 'package:tn_promo/core/internal/infrastructure/extensions/build_context_extension.dart';
import 'package:tn_promo/core/internal/presentation/themes/tn_colors.dart';
import 'package:tn_promo/core/internal/presentation/widgets/widgets.dart';
import 'package:tn_promo/features/navigation/presentation/routes/app_router.gr.dart';
import 'package:tn_promo/generated/l10n.dart';
import 'package:tn_promo/injection.dart';

class ${upperName}Page extends StatelessWidget {
  const ${upperName}Page({
    Key key,
    this.loaderBuilder,
    this.errorBuilder,
  }) : super(key: key);

  final WidgetBuilder loaderBuilder;
  final SimpleValueWidgetBuilder<String> errorBuilder;

  bool _${privateName}BuildCondition(${upperName}State previous, ${upperName}State current) {
    return previous != current;
  }

  Widget _${privateName}Builder(BuildContext context, ${upperName}State state) {
    return state.maybeMap(
      success: (s) => _buildPageWidget(context),
      failure: (s) => _buildErrorWidget(context, s.errorMessage),
      orElse: () => _buildLoaderWidget(context),
    );
  }

  Widget _buildLoaderWidget(BuildContext context) {
    return (loaderBuilder ?? defaultLoaderBuilder).call(context);
  }

  Widget _buildErrorWidget(BuildContext context, String errorMessage) {
    return (errorBuilder ?? defaultErrorBuilder).call(context, errorMessage);
  }

  Widget _buildPageWidget(BuildContext context) {
    return Container();
  }

  @override
  Widget build(BuildContext context) {
    return BlocProvider<${upperName}Bloc>(
      create: (_) => getIt<${upperName}Bloc>()..add(${upperName}Started()),
      child: BlocBuilder<${upperName}Bloc, ${upperName}State>(
        buildWhen: _${privateName}BuildCondition,
        builder: _${privateName}Builder,
      ),
    );
  }
}
