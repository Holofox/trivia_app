part of '${inputName}_bloc.dart';

@freezed
abstract class ${upperName}State with _$${upperName}State {
  const factory ${upperName}State.initial() = ${upperName}Initial;

  const factory ${upperName}State.inProgress() = ${upperName}InProgress;

  const factory ${upperName}State.success() = ${upperName}Success;

  const factory ${upperName}State.failure({
    @required String errorMessage,
  }) = ${upperName}Failure;
}

extension ${upperName}StateX on ${upperName}State {
  bool get isInProgress => this is ${upperName}InProgress;

  bool get isSuccess => this is ${upperName}Success;

  bool get isFailure => this is ${upperName}Failure;
}